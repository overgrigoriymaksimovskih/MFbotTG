<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.1</version>
        <relativePath/>
    </parent>

    <groupId>pro.masterfood</groupId>
    <artifactId>node</artifactId>
    <version>0.0.1</version>
    <name>node-service</name>
    <description>node-service</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
        <pro.masterfood.common.version>0.0.1</pro.masterfood.common.version>
        <postgresql.version>42.2.18</postgresql.version>
        <hibernate-types.version>2.21.1</hibernate-types.version>
        <pro.masterfood.shared-db-migrations.version>0.0.1</pro.masterfood.shared-db-migrations.version>
        <telegrambot.version>6.9.7.1</telegrambot.version>
        <hibernate.validator.version>8.0.1.Final</hibernate.validator.version>
        <javax.xml.bind.version>2.3.1</javax.xml.bind.version>
        <org.json.version>20180813</org.json.version>
        <javax-mail.version>1.4</javax-mail.version>
        <hashids.version>1.0.1</hashids.version>
        <liquibase-core.version>4.24.0</liquibase-core.version>
        <io.github.cdimascio.version>3.0.0</io.github.cdimascio.version>
        <!--
        <jsoup.version>1.17.2</jsoup.version>
        -->

        <lombok.servion>1.18.30</lombok.servion>

    </properties>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-to-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--Для RabbitMQ-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--Для РАБОТЫ С БД ПО ORM-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--Для ТГ-->
        <dependency>
            <groupId>org.telegram</groupId>
            <artifactId>telegrambots</artifactId>
            <version>${telegrambot.version}</version>
        </dependency>

        <!--Для того чтобы наше приложение запущенное из dispatcher знало что есть еще модуль common-->
        <dependency>
            <groupId>pro.masterfood</groupId>
            <artifactId>common</artifactId>
            <version>${pro.masterfood.common.version}</version>
        </dependency>

        <!--Драйвер постгреса чтобы приложение на уровне операционки могло общаться именно с прогрессом-->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>

        <!--Чтобы сохранять в БД данные типа json bean-->
        <dependency>
            <groupId>com.vladmihalcea</groupId>
            <artifactId>hibernate-types-60</artifactId>
            <version>${hibernate-types.version}</version> <!--  Используйте последнюю версию -->
        </dependency>

        <!--Для того чтобы наше приложение знало что есть еще модуль shared-db-migrations для создания таблиц в БД-->
        <dependency>
            <groupId>pro.masterfood</groupId>
            <artifactId>shared-db-migrations</artifactId>
            <version>${pro.masterfood.shared-db-migrations.version}</version>
        </dependency>

        <!-- Для Jakarta Bean Validation (не обязательно, позволяет расставлять над сущностями аннотации типа @NotNull чтоб в БД не попали неправильные значения)-->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version> <!-- Используйте последнюю версию -->
        </dependency>

        <!--Ох и поебался я изза нее. В спринге есть jackson. Добавление javax.xml.bind:jaxb-api сделало JAXB доступным для Jackson, и Jackson смог успешно обнаружить аннотации и сериализовать/десериализовать объекты.-->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${javax.xml.bind.version}</version>
        </dependency>

        <!-- Для работы с json в FileServiceImpl -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${org.json.version}</version>
        </dependency>

        <!-- Для валидации введенной эл. почты типа 123@mail.com -->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>${javax-mail.version}</version>
        </dependency>

        <!--Для генерации хешей-->
        <dependency>
            <groupId>org.hashids</groupId>
            <artifactId>hashids</artifactId>
            <version>${hashids.version}</version>
        </dependency>

        <!--Для БД>-->
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase-core.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--Для логов-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
            <!--Spring Boot сам управляет версиями зависимости-->
        </dependency>

        <!-- Для того, чтобы idea смогла считать переменные из .env
        так же в классе Application добавлены импорты и установка переменных
        чтобы загрузить системные свойства перед запуском Spring Boot: -->
        <dependency>
            <groupId>io.github.cdimascio</groupId>
            <artifactId>dotenv-java</artifactId>
            <version>${io.github.cdimascio.version}</version>
        </dependency>

        <!-- Для парсинга XML списка товаров:-->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>4.0.1</version> <!-- Или самая последняя версия -->
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>4.0.4</version> <!-- Или самая последняя версия -->
        </dependency>



        <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.servion}</version> <!-- Используйте последнюю версию -->
        <scope>provided</scope>
    </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
